https://www.codingninjas.com/studio/problems/check-if-linked-list-is-palindrome_985248?utm_source=youtube&utm_medium=affiliate&utm_campaign=Codestudio_Linkedlistseries

LOGIC 1
   vector<int> soluiton;
   Node* temporary=head;
   int i=0;
   while(temporary!=NULL){
       soluiton.push_back(temporary->data);
       temporary=temporary->next;
   }
   int j=0;
   int n=soluiton.size();
   int k=n-1;
   while(j<k){
       if(soluiton[j]!=soluiton[k]){
           return false;
       }
       j++;
       k--;
   }
   return true;

   LOGIC 2
{
    Node*slow=head;
    Node*fast=head;
    while(fast->next && fast->next->next){
        slow=slow->next;
        fast=fast->next->next;
    }
    Node*T1=slow->next;
    Node*T2=T1->next;
    Node*slow_duplicate=slow;
     if(fast->next){
        fast=fast->next;
    }
    while(T1){
            T1->next=slow_duplicate;
            slow_duplicate=T1;
            T1=T2;
            if(T2==NULL){
                break;
            }
            T2=T2->next;
        }
    slow->next=NULL;
    Node*comparison=head;
    while(comparison->next && fast->next){
        if(comparison->data != fast->data){
            return false;
        }
        comparison=comparison->next;
        fast=fast->next;
    }
    return true;
